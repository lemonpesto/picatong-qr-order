<!DOCTYPE html>
<html>
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>피카통 오더</title>
    <link rel="stylesheet" href="/admin.css" />
    <script src="https://kit.fontawesome.com/a3ff865f92.js" crossorigin="anonymous"></script>
    <!-- Sortable.js 로 드래그 앤 드롭 순서 변경 -->
    <script src="https://cdn.jsdelivr.net/npm/sortablejs@latest/Sortable.min.js"></script>
  </head>
  <body>
    <%- include('./partial/sidebar') %>
    <!-- 카테고리 탭 -->
    <div class="category-tabs">
      <% categories.forEach((cat, idx) => { %>
      <button class="tab-btn <%= idx===0? 'active': '' %>" data-target="section-<%= cat.name %>"><%= cat.name %></button>
      <% }) %>
    </div>
    <div class="menu-page">
      <!-- 메뉴 카드 그룹 (카테고리별) -->
      <div class="menu-cards">
        <% categories.forEach(cat => { %>
        <section id="section-<%= cat.name %>" class="category-section">
          <h2 class="category-title"><%= cat.name %></h2>
          <div class="cards-wrapper">
            <% menus.filter(m => m.category === cat.name).forEach(menu => { %>
            <div class="menu-card">
              <div class="card-header">
                <h3><%= menu.name %></h3>
                <a href="/admin/menu/<%= menu._id %>/edit" class="edit-icon">
                  <i class="fa-solid fa-pen"></i>
                </a>
              </div>
              <p class="price"><%= menu.price.toLocaleString() %>원</p>
              <p class="description"><%= menu.description || '설명 없음' %></p>
              <p class="status <%= menu.isActive? 'on':'off' %>"><%= menu.isActive? '판매중':'품절' %></p>
            </div>
            <% }) %>
          </div>
        </section>
        <% }) %>
      </div>
    </div>
    <!-- 신규 추가 플로팅 버튼 -->
    <form action="/admin/menu/new" class="fab-container">
      <button class="fab">+</button>
    </form>

    <script src="/toast.js"></script>
    <script>
      const categoryBar = document.querySelector(".category-tabs");
      const buttons = document.querySelectorAll(".tab-btn");
      const sections = document.querySelectorAll(".category-section");

      let autoScrollInProgress = false;
      let autoScrollTimeout = null;

      // 클릭 이벤트
      buttons.forEach((btn) => {
        btn.addEventListener("click", () => {
          // 1. 클릭 즉시 active
          buttons.forEach((b) => b.classList.remove("active"));
          btn.classList.add("active");

          // 2. 자동 스크롤
          const targetId = btn.dataset.target;
          const targetSection = document.getElementById(targetId);
          if (!targetSection) return;

          const yOffset = -categoryBar.offsetHeight - 50;
          const y = targetSection.getBoundingClientRect().top + window.pageYOffset + yOffset;

          autoScrollInProgress = true;
          clearTimeout(autoScrollTimeout);
          window.scrollTo({ top: y, behavior: "smooth" });

          // 3. 자동 스크롤 종료 후에만, 스크롤 감지가 active 토글 가능
          autoScrollTimeout = setTimeout(() => {
            autoScrollInProgress = false;
          }, 700); // 700ms로 살짝 늘려서 "불안정" 느낌 없게!
        });
      });

      // 스크롤 이벤트 (버튼 루프 밖! 단 1회만)
      window.addEventListener("scroll", () => {
        // 1. 자동 스크롤 중엔 무시!
        if (autoScrollInProgress) return;

        let currentSectionId = "";
        const scrollY = window.scrollY;

        sections.forEach((section) => {
          const sectionTop = section.offsetTop - categoryBar.offsetHeight - 10;
          const sectionBottom = sectionTop + section.offsetHeight;
          if (scrollY >= sectionTop && scrollY < sectionBottom) {
            currentSectionId = section.id;
          }
        });

        buttons.forEach((btn) => {
          if (btn.dataset.target === currentSectionId) btn.classList.add("active");
          else btn.classList.remove("active");
        });
      });

      // 메뉴 삭제
      document.querySelectorAll(".delete-btn").forEach((btn) => {
        btn.addEventListener("click", async () => {
          if (!confirm("메뉴를 삭제하시겠습니까?")) return;
          const id = btn.dataset.id;
          const res = await fetch(`/admin/menu/${id}`, { method: "DELETE" });
          if (res.ok) btn.closest(".menu-card").remove();
          else {
            const msg = await res.text();
            showToast(msg);
          }
        });
      });
    </script>
  </body>
</html>
